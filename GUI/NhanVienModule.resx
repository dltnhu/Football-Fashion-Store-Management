<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picNhanVien.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>